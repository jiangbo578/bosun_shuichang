<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<description>apache shiro 配置</description>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm" />
		<!-- <property name="cacheManager" ref="cacheManager" /> -->
	</bean>
	<!-- 
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> 
    </bean>
     -->
	<!--继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户的认证和授权 --> 
	<bean id="shiroDbRealm" class="com.gouhai.baoshan.spring.ShiroDbRealm"></bean>

	<bean id="rolesAny" class="com.gouhai.baoshan.filter.RolesAnyAuthorizationFilter">
	</bean>
	
	<!-- Shiro主要是通过URL过滤来进行安全管理，过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行-->  
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/" />   <!-- 没有登录的用户请求需要登录的页面时自动跳转到登录页面 -->
		<property name="successUrl" value="/index" /> <!-- 登录成功默认跳转页面 -->
		<property name="unauthorizedUrl" value="/unauthority" />  <!-- 没有权限默认跳转的页面 -->
	    <property name="filters">
	        <map>
	            <entry key="rolesAny" value-ref="rolesAny"/>
	        </map>
	    </property>
		<property name="filterChainDefinitions">
			<value>
				/business/findRemind**/** = authc,rolesAny["ganshi"]
				/business/** = authc,rolesAny["admin"]
				/user/** = authc,rolesAny["admin"]
				/role/** = authc,rolesAny["admin"]
				/authority/** = authc,rolesAny["admin"]
				/log/** = authc,rolesAny["admin"]
				/service/** = anon
				/images/** = anon
				/styles/** = anon
				/scripts/** = anon
				/CheckCode = anon
				/login = anon
            	/logout = logout  
				/init = anon
				/** = authc
			</value>
		</property>
	</bean>

	<!-- securityManager -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- spring aop 代理创建器 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<!-- 此属性非常重要，否则会导致spring的注入功能失败 -->
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	
    <!-- 启用shrio授权注解拦截方式 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>
