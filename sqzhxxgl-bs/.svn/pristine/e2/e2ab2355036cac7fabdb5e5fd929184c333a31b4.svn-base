package com.gouhai.baoshan.webservice.client.authentication;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * 统一平台身份验证服务
 *
 * This class was generated by Apache CXF 3.0.1
 * 2014-09-24T09:43:17.836+08:00
 * Generated source version: 3.0.1
 * 
 */
@WebServiceClient(name = "AuthenticationService", 
                  wsdlLocation = "http://sso.jiading.gov.cn/Framework.WebService.Latest/AuthenticationService.asmx?wsdl",
                  targetNamespace = "http://wsaf.wicresoft.com/") 
public class AuthenticationService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://wsaf.wicresoft.com/", "AuthenticationService");
    public final static QName AuthenticationServiceSoap = new QName("http://wsaf.wicresoft.com/", "AuthenticationServiceSoap");
    public final static QName AuthenticationServiceSoap12 = new QName("http://wsaf.wicresoft.com/", "AuthenticationServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://sso.jiading.gov.cn/Framework.WebService.Latest/AuthenticationService.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AuthenticationService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://sso.jiading.gov.cn/Framework.WebService.Latest/AuthenticationService.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AuthenticationService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AuthenticationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AuthenticationService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns AuthenticationServiceSoap
     */
    @WebEndpoint(name = "AuthenticationServiceSoap")
    public AuthenticationServiceSoap getAuthenticationServiceSoap() {
        return super.getPort(AuthenticationServiceSoap, AuthenticationServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthenticationServiceSoap
     */
//    @WebEndpoint(name = "AuthenticationServiceSoap")
//    public AuthenticationServiceSoap getAuthenticationServiceSoap(WebServiceFeature... features) {
//        return super.getPort(AuthenticationServiceSoap, AuthenticationServiceSoap.class, features);
//    }
    /**
     *
     * @return
     *     returns AuthenticationServiceSoap
     */
    @WebEndpoint(name = "AuthenticationServiceSoap12")
    public AuthenticationServiceSoap getAuthenticationServiceSoap12() {
        return super.getPort(AuthenticationServiceSoap12, AuthenticationServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthenticationServiceSoap
     */
//    @WebEndpoint(name = "AuthenticationServiceSoap12")
//    public AuthenticationServiceSoap getAuthenticationServiceSoap12(WebServiceFeature... features) {
//        return super.getPort(AuthenticationServiceSoap12, AuthenticationServiceSoap.class, features);
//    }

}
